[X] Count of number of new sources.
[X] Count of number of existing sources.
[X] Count of new data and pre-existing data.
[X] Average number of data items imported per second.
[X] The name of the file that was processed.
[X] How many entries were processed.
[X] How many entries were not valid.
[X] The percentage of invalid entries.
[X] The time interval of the run (first entry date and last entry date).
[X] The total elapsed time for the run.

[X] Print summary statistics to standard output and log file.
[ ] Individual entry feedback is a "verbose" setting.

What is the best possible design relationship between TabularFileSensor and HNEITabularFileSensor so that:
[ ] they do not produce any replicated code
[ ] they support the next person who comes along and wants a tabular file sensor.
Work with Robert to create the right structure.

[X] Use Ivy to download opencsv.
[X] Convert Eclipse build library references to project-relative locations.

Validator
Please create a flexible, "smart import" facility that will subject each entry record to a set of validation functions, for example:
[X] Entry is numeric.
[X] Entry has no missing values.
[X] Entry is not lower than last entry value.
[ ] Entry is less than 20kW * time since last entry's value.

[ ] Apply validation to MTU ID, Port, Meter Type, etc. and record errors in log file.

[X] These validation functions may change, and there may be more of them over time, so what you want to do is define a Java interface called
    "Validator" which has a boolean function called "validate" that accepts an entry and returns true if the entry passes that particular
    validation function.

    Then your system can implement as many Validator classes as we want, and you just make an instance of each of them, store them in a List,
    and apply each of them to each entry.

[ ] If any return false, then you print out (or log) the problematic entry along with which validator(s) failed.  I guess there needs to be a
    getExplanation() method that returns a String for each Validator class so you can describe what went wrong in easily understandable terms.

Package structure:

[X] org.wattdepot.hnei.csvimport.*
    [X] Contains all classes to read in the CSV files and send to a server.
    [X] Validator interface
      [X] NumericValue implements Validator
      [X] NoMissingFields implements Validator
      [X] MonotonicallyIncreasing implements Validator